nullcurrChoice: Start
pushed to stack: Purvang
stack: [Purvang]


currChoice: Purvang
pushed to stack: NiFirst_
stack: [NiFirst_]


currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: gaFirst
pushed to stack: Pa
stack: [gaFirst, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst1
pushed to stack: Pa
stack: [niFirst1, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst1
pushed to stack: DhaFirst1
pushed to stack: ni
stack: [DhaFirst1, ni]


currChoice: ni
Note added to sequence: ni



currChoice: DhaFirst1
pushed to stack: niFirst2
pushed to stack: Dha
stack: [niFirst2, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst1
pushed to stack: Pa
stack: [niFirst1, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst1
pushed to stack: DhaFirst2
pushed to stack: ni
stack: [DhaFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: DhaFirst2
pushed to stack: NiFirst
pushed to stack: Dha
stack: [NiFirst, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: NiFirst
pushed to stack: SaFirst*
pushed to stack: Ni
stack: [SaFirst*, Ni]


currChoice: Ni
Note added to sequence: Ni



currChoice: SaFirst*
pushed to stack: DhaFirst1
pushed to stack: Sa*
stack: [DhaFirst1, Sa*]


currChoice: Sa*
Note added to sequence: Sa*



currChoice: DhaFirst1
pushed to stack: niFirst2
pushed to stack: Dha
stack: [niFirst2, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: maFirst2
pushed to stack: Pa
stack: [maFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: maFirst2
pushed to stack: Pa
stack: [maFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst1
pushed to stack: Pa
stack: [niFirst1, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst1
pushed to stack: DhaFirst2
pushed to stack: ni
stack: [DhaFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: DhaFirst2
pushed to stack: NiFirst
pushed to stack: Dha
stack: [NiFirst, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: NiFirst
pushed to stack: SaFirst*
pushed to stack: Ni
stack: [SaFirst*, Ni]


currChoice: Ni
Note added to sequence: Ni



currChoice: SaFirst*
pushed to stack: DhaFirst1
pushed to stack: Sa*
stack: [DhaFirst1, Sa*]


currChoice: Sa*
Note added to sequence: Sa*



currChoice: DhaFirst1
pushed to stack: niFirst2
pushed to stack: Dha
stack: [niFirst2, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: gaFirst
pushed to stack: Pa
stack: [gaFirst, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: gaFirst
pushed to stack: Pa
stack: [gaFirst, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst1
pushed to stack: Pa
stack: [niFirst1, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst1
pushed to stack: DhaFirst1
pushed to stack: ni
stack: [DhaFirst1, ni]


currChoice: ni
Note added to sequence: ni



currChoice: DhaFirst1
pushed to stack: niFirst2
pushed to stack: Dha
stack: [niFirst2, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: maFirst3
pushed to stack: Pa
stack: [maFirst3, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst3
pushed to stack: gaFirst
pushed to stack: ma
stack: [gaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: DhaFirst2_
pushed to stack: Sa
stack: [DhaFirst2_, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: DhaFirst2_
pushed to stack: NiFirst_
pushed to stack: Dha_
stack: [NiFirst_, Dha_]


currChoice: Dha_
Note added to sequence: Dha_



currChoice: NiFirst_
pushed to stack: SaFirst
pushed to stack: Ni_
stack: [SaFirst, Ni_]


currChoice: Ni_
Note added to sequence: Ni_



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: maFirst2
pushed to stack: Pa
stack: [maFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: maFirst3
pushed to stack: Pa
stack: [maFirst3, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst3
pushed to stack: gaFirst
pushed to stack: ma
stack: [gaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: maFirst3
pushed to stack: Pa
stack: [maFirst3, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst3
pushed to stack: gaFirst
pushed to stack: ma
stack: [gaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: gaFirst
pushed to stack: Pa
stack: [gaFirst, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: SaFirst
pushed to stack: Re
stack: [SaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: SaFirst
pushed to stack: maFirst1
pushed to stack: Sa
stack: [maFirst1, Sa]


currChoice: Sa
Note added to sequence: Sa



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: ReFirst
pushed to stack: PaFirst
pushed to stack: Re
stack: [PaFirst, Re]


currChoice: Re
Note added to sequence: Re



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: Pa
pushed to stack: ni
stack: [maFirst2, Pa, ni]


currChoice: ni
Note added to sequence: ni



currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst2
pushed to stack: Pa
stack: [niFirst2, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst2
stack: [PaFirst2]


currChoice: PaFirst2
pushed to stack: niFirst1
pushed to stack: Pa
stack: [niFirst1, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: niFirst1
pushed to stack: DhaFirst1
pushed to stack: ni
stack: [DhaFirst1, ni]


currChoice: ni
Note added to sequence: ni



currChoice: DhaFirst1
pushed to stack: niFirst2
pushed to stack: Dha
stack: [niFirst2, Dha]


currChoice: Dha
Note added to sequence: Dha



currChoice: niFirst2
pushed to stack: maFirst2
pushed to stack: ni
stack: [maFirst2, ni]


currChoice: ni
Note added to sequence: ni



currChoice: maFirst2
pushed to stack: PaFirst
pushed to stack: ma
stack: [PaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: PaFirst
pushed to stack: PaFirst1
stack: [PaFirst1]


currChoice: PaFirst1
pushed to stack: maFirst3
pushed to stack: Pa
stack: [maFirst3, Pa]


currChoice: Pa
Note added to sequence: Pa



currChoice: maFirst3
pushed to stack: gaFirst
pushed to stack: ma
stack: [gaFirst, ma]


currChoice: ma
Note added to sequence: ma



currChoice: gaFirst
pushed to stack: maFirst1
pushed to stack: ga
stack: [maFirst1, ga]


currChoice: ga
Note added to sequence: ga



currChoice: maFirst1
pushed to stack: ReFirst
pushed to stack: ma
stack: [ReFirst, ma]


currChoice: ma
Note added to sequence: ma



seq: [Ni_, Sa, ma, Re, Sa, ma, Re, Pa, ga, ma, Re, Sa, Dha_, Ni_, Sa, ma, Re, Sa, Dha_, Ni_, Sa, Dha_, Ni_, Sa, ma, Re, Pa, ni, Pa, ma, Pa, ni, Dha, ni, ma, Pa, ni, Dha, Ni, Sa*, Dha, ni, Pa, ma, Pa, ma, Pa, ma, Pa, ni, Dha, Ni, Sa*, Dha, ni, Pa, ma, Pa, ni, Pa, ma, Pa, ni, ma, Pa, ga, ma, Re, Sa, ma, Re, Sa, Dha_, Ni_, Sa, ma, Re, Pa, ga, ma, Re, Sa, Dha_, Ni_, Sa, ma, Re, Pa, ni, Dha, ni, ma, Pa, ma, ga, ma, Re, Sa, Dha_, Ni_, Sa, Dha_, Ni_, Sa, Dha_, Ni_, Sa, ma, Re, Sa, ma, Re, Sa, ma, Re, Pa, ma, Pa, ma, ga, ma, Re, Pa, ni, Pa, ma, Pa, ni, ma, Pa, ma, ga, ma, Re, Sa, ma, Re, Pa, ga, ma, Re, Sa, ma, Re, Pa, ni, Pa, ma, Pa, ni, ma, Pa, ni, Dha, ni, ma, Pa, ma, ga, ma]